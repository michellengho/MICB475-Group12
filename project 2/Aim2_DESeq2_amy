# if you didn't install the DESeq2 package, run the following
BiocManager::install("DESeq2")

#!/usr/bin/env Rscript
library(tidyverse)
library(phyloseq)
library(DESeq2)


#### Load data ####
load("ryan_beta.RData") #non-rarefied data

#### DESeq ####
ryan_deseq <- phyloseq_to_deseq2(ryan_beta, ~`combined_condition`) #predictor variable for comparison points
DESEQ_ryan <- DESeq(ryan_deseq)

## NOTE: If you get a zeros error, then you need to add '1' count to all reads
ryan_plus1 <- transform_sample_counts(ryan_beta, function(x) x+1)
ryan_deseq <- phyloseq_to_deseq2(ryan_plus1, ~`combined_condition`)
DESEQ_ryan <- DESeq(ryan_deseq)
#res <- results(DESEQ_ryan, tidy=TRUE, 
               #this will ensure that No is your reference group
               #contrast = c("combined_condition","Yes","No"))

#resultsNames(DESEQ_ryan)
#contrast = c("combined_condition", "Crohn.s.Disease.Non.smoker", "Crohn.s.Disease.Ex.smoker")
#res <- results(DESEQ_ryan, tidy = TRUE, 
               #contrast = c("combined_condition", "Healthy.Smoker", "Crohn.s.Disease.Ex.smoker"))


levels(DESEQ_ryan$combined_condition)
DESEQ_ryan$combined_condition <- relevel(DESEQ_ryan$combined_condition, ref = "Crohn's Disease/Ex-smoker")
res <- results(DESEQ_ryan, contrast = c("combined_condition", "Healthy/Smoker", "Crohn's Disease/Ex-smoker"))

View(res)

# Look at results 

## Volcano plot: effect size VS significance
ggplot(res) +
  geom_point(aes(x=log2FoldChange, y=-log10(padj)))

res_df <- as.data.frame(res)
vol_plot <- res_df %>%
  mutate(significant = padj < 0.01 & abs(log2FoldChange) > 2) %>%
  ggplot() +
  geom_point(aes(x = log2FoldChange, y = -log10(padj), col = significant))
res_df <- res_df %>%
  filter(!is.na(padj) & !is.na(log2FoldChange))

vol_plot <- res_df %>%
  mutate(significant = padj < 0.01 & abs(log2FoldChange) > 2) %>%
  ggplot() +
  geom_point(aes(x = log2FoldChange, y = -log10(padj), col = significant))
print(vol_plot)
ggsave(filename="vol_plot.png",vol_plot)




## Make variable to color by whether it is significant + large change
#vol_plot <- res %>%
  #mutate(significant = padj<0.01 & abs(log2FoldChange)>2) %>%
  #ggplot() +
  #geom_point(aes(x=log2FoldChange, y=-log10(padj), col=significant))

# To get table of results

library(dplyr)


library(tibble)

res_df <- res_df %>%
  rownames_to_column("ASV")  # Move row names into a column named "ASV"
library(dplyr)

sigASVs <- res_df %>%
  filter(!is.na(padj) & !is.na(log2FoldChange)) %>%  # Remove rows with NA values
  filter(padj < 0.01 & abs(log2FoldChange) > 2)  # Apply significance thresholds
View(sigASVs)

# Optionally save as a CSV file
write.csv(sigASVs, "significant_ASVs.csv", row.names = FALSE)

sigASVs <- res_df %>%
  filter(padj < 0.01 & abs(log2FoldChange) > 2) %>%
  rename(ASV = row)
sigASVs <- res_df %>%
  filter(!is.na(padj) & !is.na(log2FoldChange)) %>%
  filter(padj < 0.01 & abs(log2FoldChange) > 2) %>%
  rename(ASV = row)
View(sigASVs)
sigASVs_vec <- sigASVs %>%
  pull(ASV)


# Prune phyloseq file
ryan_DESeq <- prune_taxa(sigASVs_vec,ryan_beta)
sigASVs <- tax_table(ryan_DESeq) %>% as.data.frame() %>%
  rownames_to_column(var="ASV") %>%
  right_join(sigASVs) %>%
  arrange(log2FoldChange) %>%
  mutate(Genus = make.unique(Genus)) %>%
  mutate(Genus = factor(Genus, levels=unique(Genus)))

ggplot(sigASVs) +
  geom_bar(aes(x=Genus, y=log2FoldChange), stat="identity")+
  geom_errorbar(aes(x=Genus, ymin=log2FoldChange-lfcSE, ymax=log2FoldChange+lfcSE)) +
  theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
