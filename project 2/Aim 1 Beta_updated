#################################### Phyloseq #####################################

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install("phyloseq")

library(phyloseq)
library(ape)
library(tidyverse)
library(vegan)
library(ggplot2)


## Load Data

metapd <- "ryan_metadata_new.tsv"
meta <- read_delim(metapd, delim = "\t")

otuFP <- "feature-table.txt"
otu <- read_delim(file = otuFP, delim="\t", skip=1)

tax <- "taxonomy.tsv"
taxonomy <- read_delim(tax, delim = "\t")

rooted_tree <- "tree.nwk"
rt <- read.tree(rooted_tree)

## Make Phyloseq object

#Formatting OTU Table
otu_mat <- as.matrix(otu[,-1])
rownames(otu_mat) <- otu$`#OTU ID`
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE) 
class(OTU)

#Formatting Metadata
samp_df <- as.data.frame(meta[,-1])
rownames(samp_df)<- meta$'sample-id'
SAMP <- sample_data(samp_df)
class(SAMP)

#Formatting taxonomy
tax_mat <- taxonomy %>% select(-Confidence)%>%
  separate(col=Taxon, sep="; "
           , into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
  as.matrix() 


tax_mat <- tax_mat[,-1]
rownames(tax_mat) <- taxonomy$`Feature ID`
TAX <- tax_table(tax_mat)
class(TAX)


# Create phyloseq object
ryan_beta <- phyloseq(OTU, SAMP, TAX, rt)

otu_table(ryan_beta)
sample_data(ryan_beta)
tax_table(ryan_beta)
phy_tree(ryan_beta)

# Rarefy samples
rarecurve(t(as.data.frame(otu_table(ryan_beta))), cex=0.1)


ryan_beta_rarefied <- rarefy_even_depth(ryan_beta, rngseed = 1, sample.size = 6484)
ryan_beta_rarefied_filtered <- subset_samples(ryan_beta_rarefied, Smoking_status != "Ex-smoker" & Smoking_status != "Unknown")

# Saving

save(ryan_beta, file="ryan_beta.RData")
save(ryan_beta_rarefied_filtered, file="ryan_beta_rarefied_filtered.RData")









#################################### PLOTS #####################################

install.packages("picante")
library(picante)

# Load data
load("ryan_beta_rarefied_filtered.RData")
load("ryan_beta.RData")

unifrac_unweighted <- distance(ryan_beta_rarefied_filtered, method="UniFrac", weighted = FALSE)
unifrac_weighted <- distance(ryan_beta_rarefied_filtered, method="UniFrac", weighted = TRUE)
bray_curtis_dist <- distance(ryan_beta_rarefied_filtered, method = "bray")


#Bray-Curtis PCoA
pcoa_bc <- ordinate(ryan_beta_rarefied_filtered, method="PCoA", distance=bray_curtis_dist)

plot_ordination(ryan_beta_rarefied_filtered, pcoa_bc, color = "Smoking_status", shape="Histological_status")

gg_pcoa <- plot_ordination(ryan_beta_rarefied_filtered, pcoa_bc, color = "Smoking_status", shape="Histological_status") +
  labs(pch="Inflammation status", col = "Smoking status")
gg_pcoa

ggsave("plot_pcoa_bc.png"
       , gg_pcoa
       , height=4, width=5)


##Unifrac (Unweighted) PCoA
pcoa_bc <- ordinate(ryan_beta_rarefied_filtered, method="PCoA", distance=unifrac_unweighted)


plot_ordination(ryan_beta_rarefied_filtered, pcoa_bc, color = "Smoking_status", shape="Histological_status")

gg_pcoa <- plot_ordination(ryan_beta_rarefied_filtered, pcoa_bc, color = "Smoking_status", shape="Histological_status") +
  labs(pch="Inflammation status", col = "Smoking status")
gg_pcoa

ggsave("plot_pcoa_uw.png"
       , gg_pcoa
       , height=4, width=5)


## Unifrac (Weighted) PCoA
pcoa_bc <- ordinate(ryan_beta_rarefied_filtered, method="PCoA", distance=unifrac_weighted)

plot_ordination(ryan_beta_rarefied_filtered, pcoa_bc, color = "Smoking_status", shape="Histological_status")

gg_pcoa <- plot_ordination(ryan_beta_rarefied_filtered, pcoa_bc, color = "Smoking_status", shape="Histological_status") +
  labs(pch="Inflammation status", col = "Smoking status")
gg_pcoa

ggsave("plot_pcoa_w.png"
       , gg_pcoa
       , height=4, width=5)







#################################### PERMANOVA #####################################

# Load libraries
library(phyloseq)
library(vegan)
library(ggplot2)
install.packages("ggforce")
library(ggforce)  # for geom_mark_ellipse


# Extract and convert sample data to a data frame
sample_data_df <- data.frame(sample_data(ryan_beta_rarefied_filtered))

# Check the structure to confirm it is a data frame
str(sample_data_df)


# Bray-Curtis PERMANOVA
# Ensure sample data is a data frame
adonis2_bc <- adonis2(bray_curtis_dist ~ Smoking_status + Histological_status,
                      data = sample_data_df,
                      permutations = 999)


print(adonis2_bc)

# Unweighted UniFrac PERMANOVA
# Extract and convert sample data to a data frame
sample_data_df <- data.frame(sample_data(ryan_beta_rarefied_filtered))

# Check the structure to confirm it is a data frame
str(sample_data_df)

# Run the PERMANOVA test for unweighted UniFrac distance
adonis2_uw <- adonis2(unifrac_unweighted ~ Smoking_status + Histological_status,
                      data = sample_data_df,
                      permutations = 999)

print(adonis2_uw)

# Weighted UniFrac PERMANOVA
# Extract and convert sample data to a data frame
sample_data_df <- data.frame(sample_data(ryan_beta_rarefied_filtered))

# Check the structure to confirm it is a data frame
str(sample_data_df)

# Run the PERMANOVA test for weighted UniFrac distance
adonis2_w <- adonis2(unifrac_weighted ~ Smoking_status + Histological_status,
                     data = sample_data_df,
                     permutations = 999)

print(adonis2_w)

# 1. Bray-Curtis with ellipses
gg_pcoa_bc <- plot_ordination(ryan_beta_rarefied_filtered, pcoa_bc, color = "Smoking_status", shape = "Histological_status") +
  stat_ellipse(type = "norm") +
  labs(pch="Inflammation status", col = "Smoking status") +
  ggtitle("Bray-Curtis - Smoking & Inflammation Status with Ellipses")
print(gg_pcoa_bc)

# Save the plot
ggsave("plot_pcoa_bc_ellipses.png", gg_pcoa_bc, height=4, width=5)

# 2. Unweighted UniFrac with ellipses
gg_pcoa_uw <- plot_ordination(ryan_beta_rarefied_filtered, pcoa_uw, color = "Smoking_status", shape = "Histological_status") +
  stat_ellipse(type = "norm") +
  labs(pch = "Inflammation status", col = "Smoking status") +
  ggtitle("Unweighted UniFrac - Smoking & Inflammation Status with Ellipses")

# Print the plot
print(gg_pcoa_uw)

# Save the plot
ggsave("plot_pcoa_uw_ellipses.png", gg_pcoa_uw, height=4, width=5)

# 3. Weighted UniFrac with ellipses


# Calculate the weighted UniFrac distance matrix if not already done
unifrac_weighted <- phyloseq::distance(ryan_beta_rarefied_filtered, method = "unifrac", weighted = TRUE)

# Create the PCoA ordination object
pcoa_w <- ordinate(ryan_beta_rarefied_filtered, method = "PCoA", distance = unifrac_weighted)

# Plot the ordination
gg_pcoa_w <- plot_ordination(ryan_beta_rarefied_filtered, pcoa_w, color = "Smoking_status", shape = "Histological_status") +
  stat_ellipse(type = "norm") +
  labs(pch = "Histological status", col = "Smoking status") +
  ggtitle("Weighted UniFrac - Smoking & Inflammation Status with Ellipses")

# Print the plot
print(gg_pcoa_w)


# Save the plot
ggsave("plot_pcoa_w_ellipses.png", gg_pcoa_w, height=4, width=5)
